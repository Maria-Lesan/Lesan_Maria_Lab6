<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lesan_Maria_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Lesan_Maria_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customers}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customersOrderViewSource" Source="{Binding Order, Source={StaticResource customerViewSource}}"/>
        
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="334" Margin="42,47,0,0" VerticalAlignment="Top" Width="673">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="0,-2,-0.333,2.333">
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="136,10,130.667,158.333" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="166,199,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="10,0,0,271" VerticalAlignment="Bottom" Width="75" Click="btnNew_Click"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="10,147,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="0,199,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="0,225,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Margin="166,168,0,0" VerticalAlignment="Top" Width="75" Click="btnPrev_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="459,168,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="651*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnNewInv" Content="New" HorizontalAlignment="Left" Margin="2,36,0,0" VerticalAlignment="Top" Width="75" Click="btnNewInv_Click" Grid.Column="1" Height="21"/>
                    <Button x:Name="btnEditInv" Content="Edit" Grid.Column="1" HorizontalAlignment="Left" Margin="0,86,0,0" VerticalAlignment="Top" Width="75" Click="btnEditInv_Click" Height="21"/>
                    <Button x:Name="btnDeleteInv" Content="Delete" Grid.Column="1" HorizontalAlignment="Left" Margin="0,127,0,0" VerticalAlignment="Top" Width="75" Click="btnDeleteInv_Click"/>
                    <Button x:Name="btnSaveInv" Content="Save" Grid.Column="1" HorizontalAlignment="Left" Margin="0,196,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveInv_Click" RenderTransformOrigin="0.5,0.5"/>
                    <Button x:Name="btnCancelInv" Content="Cancel" Grid.Column="1" HorizontalAlignment="Left" Margin="0,234,0,0" VerticalAlignment="Top" Width="75" Click="btnCancelInv_Click"/>
                    <Button x:Name="btnPrevInv" Content="Previous" Grid.Column="1" HorizontalAlignment="Left" Margin="245,170,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevInv_Click"/>
                    <Button x:Name="btnNextInv" Content="Next" Grid.Column="1" HorizontalAlignment="Left" Margin="435,170,0,0" VerticalAlignment="Top" Width="75" Click="btnNextInv_Click"/>
                    <Grid x:Name="grid2" Grid.Column="1" HorizontalAlignment="Left" Margin="260,196,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" Grid.Column="1" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="174,10,76.667,172.333" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customersOrderViewSource}" Margin="0,-5,-15.333,0.333">
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="138,48,0,0" VerticalAlignment="Top" Width="120" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Inventory" HorizontalAlignment="Left" Margin="138,22,0,0" VerticalAlignment="Top"/>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="409,22,0,0" VerticalAlignment="Top"/>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="409,48,0,0" VerticalAlignment="Top" Width="120">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DataGrid x:Name="orderDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Margin="138,91,96,96">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewOrd" Content="New" HorizontalAlignment="Left" Margin="21,33,0,0" VerticalAlignment="Top" Width="75" Click="btnNewOrd_Click"/>
                    <Button x:Name="btnEditOrd" Content="Edit" HorizontalAlignment="Left" Margin="21,72,0,0" VerticalAlignment="Top" Width="75" Click="btnEditOrd_Click"/>
                    <Button x:Name="btnDeleteOrd" Content="Delete" HorizontalAlignment="Left" Margin="21,117,0,0" VerticalAlignment="Top" Width="75" Click="btnDeleteOrd_Click"/>
                    <Button x:Name="btnSaveOrd" Content="Save" HorizontalAlignment="Left" Margin="21,153,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveOrd_CLick"/>
                    <Button x:Name="btnCancelOrd" Content="Cancel" HorizontalAlignment="Left" Margin="21,198,0,0" VerticalAlignment="Top" Width="75" Click="btnCancelOrd_Click" Cursor="None"/>
                    <Button x:Name="btnNextOrd" Content="Next" HorizontalAlignment="Left" Margin="427,219,0,0" VerticalAlignment="Top" Width="75" Click="btnNextOrd_Click"/>
                    <Button x:Name="btnPrevOrd" Content="Previous" HorizontalAlignment="Left" Margin="228,225,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevOrd_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
